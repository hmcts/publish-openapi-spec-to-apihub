name: Publish OpenAPI Spec to APIHub
description: Runs swaggerhub cli to push openapi jarfile to APIHub

on:
  workflow_call:
    inputs:
      swaggerhub_api_key:
        required: true
        type: string
      upload_artifact_name:
        required: true
        type: string
      apihub_owner:
        required: true
        type: string
      api_name:
        required: true
        type: string
      api_version:
        required: true
        type: string
      is_release:
        required: true
        type: boolean

runs:
  using: "composite"
  steps:
    - name: Download versioned OpenAPI spec
      uses: actions/download-artifact@v5
      with:
        name: ${{ inputs.upload_artifact_name }}
        path: ./${{ inputs.api_version }}

    - name: Set up Node.js
      uses: actions/setup-node@v5

    - name: Install SwaggerHub CLI
      shell: bash
      run: npm install -g swaggerhub-cli

    - name: Set env variables in ${GITHUB_ENV}
      shell: bash
      env:
        APIHUB_OWNER: ${{ inputs.apihub_owner }}
        API_NAME: ${{ inputs.api_name }}
        API_VERSION: ${{ inputs.api_version }}
      run: |
        echo "APIHUB_OWNER=${APIHUB_OWNER}" >> "$GITHUB_ENV"
        echo "API_NAME=${API_NAME}" >> "$GITHUB_ENV"
        echo "API_VERSION=${API_VERSION}" >> "$GITHUB_ENV"
        echo "CLI_API_REF=${APIHUB_OWNER}/${API_NAME}/${API_VERSION}" >> "$GITHUB_ENV"

    - name: Find OpenAPI file
      shell: bash
      id: find_spec
      run: |
        FILE=$(find ./${{ inputs.api_version }} -type f -name "*.yml" | head -n 1)
        echo "openapi_spec_file=$FILE" >> "$GITHUB_OUTPUT"

    # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apicreate
    - name: Push API definition into API Hub
      shell: bash
      env:
        SWAGGERHUB_API_KEY: ${{ inputs.swaggerhub_api_key }}
        OPENAPI_SPEC_FILE: ${{ steps.find_spec.outputs.openapi_spec_file }}
      run: |
        if [[ "${{ inputs.is_release }}" == "true" ]]; then
          echo "PUBLIC: Publishing the RELEASED API to SwaggerHub"
          swaggerhub api:create "${CLI_API_REF}" --file "${OPENAPI_SPEC_FILE}" --published publish --visibility public
        else
          echo "PRIVATE: Publishing the DRAFT API to SwaggerHub"
          swaggerhub api:create "${CLI_API_REF}" --file "${OPENAPI_SPEC_FILE}" --visibility private
        fi

    # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apiget
    - name: Check the API definition exists
      shell: bash
      env:
        SWAGGERHUB_API_KEY: ${{ inputs.swaggerhub_api_key }}
      run: |
        set -o pipefail
        if ! swaggerhub api:get "${CLI_API_REF}" 2>&1 | tee error.log; then
          echo "❌ API definition was not found on APIHub"
          echo "--- CLI Error Output ---"
          cat error.log
          exit 1
        fi

    # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apivalidate
    - name: Validate definition
      shell: bash
      env:
        SWAGGERHUB_API_KEY: ${{ inputs.swaggerhub_api_key }}
      run: |
        set -o pipefail
        if ! swaggerhub api:validate "${CLI_API_REF}" 2>&1 | tee error.log; then
          echo "❌ OpenAPI definition failed validation"
          echo "--- CLI Error Output ---"
          cat error.log
          exit 1
        fi

      # If release version then find all apis where published=false
      # And then filter for those with sha snapshot versions i.e.  1.0.0-be4c28d
      # Then delete all those found
    - name: Delete snapshot versions
      shell: bash
      if: inputs.is_release
      env:
        SWAGGERHUB_API_KEY: ${{ inputs.swaggerhub_api_key }}
      run: |
        set -o pipefail
        echo "DELETING ${APIHUB_OWNER}/${API_NAME} snapshots"
        swaggerhub api:get "${APIHUB_OWNER}/${API_NAME}/" | jq '.apis.[] | select( any(.properties[]; .type == "X-Published" and .value=="false") ) | .properties[] | select(.type == "X-Version")' > unpublished-versions.json
        echo "unpublished-versions ... START"
        cat unpublished-versions.json
        echo "unpublished-versions ... END"
        cat unpublished-versions.json | egrep "value.*\-[a-f0-9]{7}" | awk '{ print $2 }' | sed s/\"//g > delete-versions.json
        echo "delete-versions ... START"
        cat delete-versions.json
        echo "delete-versions ... END"
        cat delete-versions.json | while read DELETEVERSION
        do
            echo "deleting ${API_NAME} with version ${DELETEVERSION}"
            swaggerhub api:delete "${APIHUB_OWNER}/${API_NAME}/${DELETEVERSION}" -f
        done

      # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apisetdefault
    - name: Set released version to the default API Definition
      shell: bash
      if: inputs.is_release
      env:
        SWAGGERHUB_API_KEY: ${{ inputs.swaggerhub_api_key }}
      run: |
        swaggerhub api:setdefault "${CLI_API_REF}"